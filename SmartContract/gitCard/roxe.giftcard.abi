{
    "____comment": "This file was generated with roxe-abigen. DO NOT EDIT ",
    "version": "roxe::abi/1.1",
    "types": [],
    "structs": [
        {
            "name": "account",
            "base": "",
            "fields": [
                {
                    "name": "balance",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "addauthor",
            "base": "",
            "fields": [
                {
                    "name": "sym",
                    "type": "symbol"
                },
                {
                    "name": "author",
                    "type": "name"
                }
            ]
        },
        {
            "name": "close",
            "base": "",
            "fields": [
                {
                    "name": "owner",
                    "type": "name"
                },
                {
                    "name": "symbol",
                    "type": "symbol"
                }
            ]
        },
        {
            "name": "create",
            "base": "",
            "fields": [
                {
                    "name": "issuer",
                    "type": "name"
                },
                {
                    "name": "maximum_supply",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "currency_stats",
            "base": "",
            "fields": [
                {
                    "name": "supply",
                    "type": "asset"
                },
                {
                    "name": "max_supply",
                    "type": "asset"
                },
                {
                    "name": "issuer",
                    "type": "name"
                },
                {
                    "name": "authors",
                    "type": "name[]"
                },
                {
                    "name": "fee",
                    "type": "int64"
                },
                {
                    "name": "fixed",
                    "type": "bool"
                },
                {
                    "name": "percent",
                    "type": "int64"
                },
                {
                    "name": "maxfee",
                    "type": "int64"
                },
                {
                    "name": "minfee",
                    "type": "int64"
                },
                {
                    "name": "useroc",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "delauthor",
            "base": "",
            "fields": [
                {
                    "name": "sym",
                    "type": "symbol"
                },
                {
                    "name": "from",
                    "type": "name"
                }
            ]
        },
        {
            "name": "issue",
            "base": "",
            "fields": [
                {
                    "name": "from",
                    "type": "name"
                },
                {
                    "name": "to",
                    "type": "name"
                },
                {
                    "name": "quantity",
                    "type": "asset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "open",
            "base": "",
            "fields": [
                {
                    "name": "owner",
                    "type": "name"
                },
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "ram_payer",
                    "type": "name"
                }
            ]
        },
        {
            "name": "retire",
            "base": "",
            "fields": [
                {
                    "name": "from",
                    "type": "name"
                },
                {
                    "name": "quantity",
                    "type": "asset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "setfee",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "fee",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "setfeeper",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "percent",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "setfix",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "fix",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "setmaxfee",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "maxfee",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "setminfee",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "minfee",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "transfer",
            "base": "",
            "fields": [
                {
                    "name": "from",
                    "type": "name"
                },
                {
                    "name": "to",
                    "type": "name"
                },
                {
                    "name": "quantity",
                    "type": "asset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "useroc",
            "base": "",
            "fields": [
                {
                    "name": "symbol",
                    "type": "symbol"
                },
                {
                    "name": "roc",
                    "type": "bool"
                }
            ]
        }
    ],
    "actions": [
        {
            "name": "addauthor",
            "type": "addauthor",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: add token author\nsummary: 'add the  {{symbol_to_symbol_code sym}} token author {{author}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nadd the {{sym}} token author {{author}}."
        },
        {
            "name": "close",
            "type": "close",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Close Token Balance\nsummary: 'Close {{nowrap owner}}’s zero quantity balance'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{owner}} agrees to close their zero quantity balance for the {{symbol_to_symbol_code symbol}} token.\n\nRAM will be refunded to the RAM payer of the {{symbol_to_symbol_code symbol}} token balance for {{owner}}."
        },
        {
            "name": "create",
            "type": "create",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Create New Token\nsummary: 'Create a new token'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{$action.account}} agrees to create a new token with symbol {{asset_to_symbol_code maximum_supply}} to be managed by {{issuer}}.\n\nThis action will not result any any tokens being issued into circulation.\n\n{{issuer}} will be allowed to issue tokens into circulation, up to a maximum supply of {{maximum_supply}}.\n\nRAM will deducted from {{$action.account}}’s resources to create the necessary records."
        },
        {
            "name": "delauthor",
            "type": "delauthor",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: delete token author\nsummary: 'delete the {{symbol_to_symbol_code sym}} token author {{author}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\ndelete the {{sym}} token author {{author}}."
        },
        {
            "name": "issue",
            "type": "issue",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Issue Tokens into Circulation\nsummary: 'Issue {{nowrap quantity}} into circulation and transfer from {{nowrap from}} into {{nowrap to}}’s account'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\nThe token manager agrees to issue {{quantity}} into circulation, and transfer it  from {{from}}  into {{to}}’s account.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{from}} does not be authorzed or non-exist, or {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, or the token manager does not have a balance for {{asset_to_symbol_code quantity}}, the token manager will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from the token manager’s resources to create the necessary records.\n\nThis action does not allow the total quantity to exceed the max allowed supply of the token."
        },
        {
            "name": "open",
            "type": "open",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Open Token Balance\nsummary: 'Open a zero quantity balance for {{nowrap owner}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\n{{ram_payer}} agrees to establish a zero quantity balance for {{owner}} for the {{symbol_to_symbol_code symbol}} token.\n\nIf {{owner}} does not have a balance for {{symbol_to_symbol_code symbol}}, {{ram_payer}} will be designated as the RAM payer of the {{symbol_to_symbol_code symbol}} token balance for {{owner}}. As a result, RAM will be deducted from {{ram_payer}}’s resources to create the necessary records."
        },
        {
            "name": "retire",
            "type": "retire",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Remove Tokens from Circulation\nsummary: 'Remove {{nowrap quantity}} from {{nowrap from}} circulation'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/token.png#207ff68b0406eaa56618b08bda81d6a0954543f36adc328ab3065f31a5c5d654\n---\n\nThe token manager agrees to remove {{quantity}} from {{from}} circulation, taken from their own account.\n\n{{#if memo}} There is a memo attached to the action stating:\n{{memo}}\n{{/if}}"
        },
        {
            "name": "setfee",
            "type": "setfee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token Fee\nsummary: 'set the {{symbol_to_symbol_code symbol}} token fee {{fee}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token fee {{fee}}."
        },
        {
            "name": "setfeeper",
            "type": "setfeeper",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token Fee Percent\nsummary: 'set the {{symbol_to_symbol_code symbol}} token fee percent {{percent}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token fee percent {{percent}}."
        },
        {
            "name": "setfix",
            "type": "setfix",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token fee fix or not\nsummary: 'set the {{symbol_to_symbol_code symbol}} fee token fee fix {{fix}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token type fee fix {{fix}}."
        },
        {
            "name": "setmaxfee",
            "type": "setmaxfee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token Max Fee\nsummary: 'set the {{symbol_to_symbol_code symbol}} token max fee {{maxfee}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token max fee {{maxfee}}."
        },
        {
            "name": "setminfee",
            "type": "setminfee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token Min Fee\nsummary: 'set the {{symbol_to_symbol_code symbol}} token min fee {{minfee}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token min fee {{minfee}}."
        },
        {
            "name": "transfer",
            "type": "transfer",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Transfer Tokens\nsummary: 'Send {{nowrap quantity}} from {{nowrap from}} to {{nowrap to}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/transfer.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\n{{from}} agrees to send {{quantity}} to {{to}}.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{from}} is not already the RAM payer of their {{asset_to_symbol_code quantity}} token balance, {{from}} will be designated as such. As a result, RAM will be deducted from {{from}}’s resources to refund the original RAM payer.\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, {{from}} will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from {{from}}’s resources to create the necessary records."
        },
        {
            "name": "useroc",
            "type": "useroc",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Token Type Roc\nsummary: 'set the {{symbol_to_symbol_code symbol}} fee token type {{roc}}'\nicon: http://127.0.0.1/ricardian_assets/roxe.contracts/icons/setfee.png#5dfad0df72772ee1ccc155e670c1d124f5c5122f1d5027565df38b418042d1dd\n---\n\nset {{symbol}} token type fee {{roc}}."
        }
    ],
    "tables": [
        {
            "name": "accounts",
            "type": "account",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "stat",
            "type": "currency_stats",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        }
    ],
    "ricardian_clauses": [],
    "variants": []
}